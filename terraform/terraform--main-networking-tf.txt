########################
##     NETWORKING     ##
########################


#################
##  CREATE VPC
#################

resource "aws_vpc" "vpc" {
  cidr_block           = "${var.network_address_space}"
  enable_dns_hostnames = true
  enable_dns_support   = true

  tags {
    Name        = "${var.environment_tag}--vpc"
    BillingCode = "${var.billing_code_tag}"
  }
}

#######################
##  Internet Gateway
#######################

resource "aws_internet_gateway" "igw" {
  vpc_id = "${aws_vpc.vpc.id}"

  tags {
    Name = "${var.environment_tag}--igw"
  }
}

############################
## Create Routing Tables
############################

## Public RT
resource "aws_route_table" "rt_public" {
  vpc_id = "${aws_vpc.vpc.id}"

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.igw.id}"
  }

  tags {
    Name = "${var.environment_tag}--rt_public"
  }
}

## Private RT
resource "aws_default_route_table" "rt_private" {
  default_route_table_id = "${aws_vpc.vpc.default_route_table_id}"

  tags {
    Name = "${var.environment_tag}--rt_private"
  }
}

#######################
##  Create subnets
#######################

##### Public-1
resource "aws_subnet" "subnet1_public" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["subnet1_public"]}"
  map_public_ip_on_launch = true
  availability_zone       = "${data.aws_availability_zones.available.names[0]}"

  tags {
    Name = "${var.environment_tag}--subnet1_public"
  }
}

##### Public-2
resource "aws_subnet" "subnet2_public" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["subnet2_public"]}"
  map_public_ip_on_launch = true
  availability_zone       = "${data.aws_availability_zones.available.names[1]}"

  tags {
    Name = "${var.environment_tag}--subnet2_public"
  }
}

##### Private-1
resource "aws_subnet" "subnet1_private" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["subnet1_private"]}"
  map_public_ip_on_launch = false
  availability_zone       = "${data.aws_availability_zones.available.names[0]}"

  tags {
    Name = "${var.environment_tag}--subnet1_private"
  }
}

##### Private-2
resource "aws_subnet" "subnet2_private" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["subnet2_private"]}"
  map_public_ip_on_launch = false
  availability_zone       = "${data.aws_availability_zones.available.names[1]}"

  tags {
    Name = "${var.environment_tag}--subnet2_private"
  }
}

#############
##  RDS
#############

##### RDS subnet1
resource "aws_subnet" "rds_subnet1" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["rds_subnet1"]}"
  map_public_ip_on_launch = false
  availability_zone       = "${data.aws_availability_zones.available.names[0]}"

  tags {
    Name = "rds_subnet-1"
  }
}

##### RDS subnet2
resource "aws_subnet" "rds_subnet2" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["rds_subnet2"]}"
  map_public_ip_on_launch = false
  availability_zone       = "${data.aws_availability_zones.available.names[1]}"

  tags {
    Name = "rds_subnet-2"
  }
}

##### RDS subnet3
resource "aws_subnet" "rds_subnet3" {
  vpc_id                  = "${aws_vpc.vpc.id}"
  cidr_block              = "${var.cidrs["rds_subnet3"]}"
  map_public_ip_on_launch = false
  availability_zone       = "${data.aws_availability_zones.available.names[2]}"

  tags {
    Name = "rds_subnet-3"
  }
}

##### RDS subnet group
resource "aws_db_subnet_group" "rds_subnetgroup" {
  name = "rds_subnetgroup"

  subnet_ids = [
    "${aws_subnet.rds_subnet1.id}",
    "${aws_subnet.rds_subnet2.id}",
    "${aws_subnet.rds_subnet3.id}",
  ]

  tags {
    Name = "${var.environment_tag}--rds_subnet_group"
  }
}

####### RDS subnet associations

resource "aws_route_table_association" "subnet1_public_assoc" {
  subnet_id      = "${aws_subnet.subnet1_public.id}"
  route_table_id = "${aws_route_table.rt_public.id}"
}

resource "aws_route_table_association" "subnet2_public_assoc" {
  subnet_id      = "${aws_subnet.subnet2_public.id}"
  route_table_id = "${aws_route_table.rt_public.id}"
}

resource "aws_route_table_association" "subnet1_private_assoc" {
  subnet_id      = "${aws_subnet.subnet1_private.id}"
  route_table_id = "${aws_default_route_table.rt_private.id}"
}

resource "aws_route_table_association" "subnet2_private_assoc" {
  subnet_id      = "${aws_subnet.subnet2_private.id}"
  route_table_id = "${aws_default_route_table.rt_private.id}"
}

########################
##  Load Balancer
########################

resource "aws_elb" "elb" {
  name = "${var.domain_name}-elb"

  ###  availability_zones = [
  ###    "${data.aws_availability_zones.available.names[0]}",
  ###    "${data.aws_availability_zones.available.names[1]}",
  ###    "${data.aws_availability_zones.available.names[2]}"
  ###    ]

  subnets = [
    "${aws_subnet.subnet1_public.id}",
    "${aws_subnet.subnet2_public.id}",
  ]
  security_groups = ["${aws_security_group.public_security_group.id}"]
  listener {
    instance_port     = 80
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }
  health_check {
    healthy_threshold   = "${var.elb_healthy_threshold}"
    unhealthy_threshold = "${var.elb_unhealthy_threshold}"
    timeout             = "${var.elb_timeout}"
    target              = "TCP:80"
    #####target              = "HTTP:80/"
    interval            = "${var.elb_interval}"
  }

  instances                   = ["${aws_instance.nginx1.id}"]
  cross_zone_load_balancing   = true
  idle_timeout                = 400
  connection_draining         = true
  connection_draining_timeout = 400
  tags {
    Name = "${var.domain_name}-elb"
  }
}

#####################
###  Key pair
#####################

##resource "aws_key_pair" "dev_keypair" {
##  key_name = "${var.key_name}"
##  public_key = "${file(var.public_key_path)}"
##}

######################
###  Route 53
######################

#-----------------------------
#####  PRIMARY ZONE --- www
#-----------------------------

##### Primary Zone
resource "aws_route53_zone" "primary" {
  name              = "${var.domain_name}.us"
  delegation_set_id = "${var.delegation_set_id}"
}

##### WWW
resource "aws_route53_record" "www" {
  zone_id = "${aws_route53_zone.primary.zone_id}"
  name    = "www.${var.domain_name}.us"
  type    = "A"

  alias {
    name                   = "${aws_elb.elb.dns_name}"
    zone_id                = "${aws_elb.elb.zone_id}"
    evaluate_target_health = false
  }
}

##### DEV
resource "aws_route53_record" "dev" {
  zone_id = "${aws_route53_zone.primary.zone_id}"
  name    = "dev.${var.domain_name}.us"
  type    = "A"
  ttl     = "300"
  records = ["${aws_instance.dev.public_ip}"]
}

#-----------------------------
##### PRIVATE ZONE --- for RDS
#-----------------------------

resource "aws_route53_zone" "secondary" {
  name   = "${var.domain_name}.us"
  vpc_id = "${aws_vpc.vpc.id}"
}

## DB
resource "aws_route53_record" "db" {
  zone_id = "${aws_route53_zone.secondary.zone_id}"
  name    = "db.${var.domain_name}.us"
  type    = "CNAME"
  ttl     = "300"
  records = ["${aws_db_instance.db.address}"]
}

###################
### End of Code
###################