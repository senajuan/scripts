apiVersion: v1
kind: Service
metadata:
  name: console-api
  namespace: prod
  labels:
    app: console-api
spec:
  selector:
    app: console-api
  ports:
  - port: 80
    protocol: TCP
    # Set this to the containerPort
    targetPort: 80
    name: external
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: console-api
  namespace: prod
  labels:
    app: console-api
spec:
  # The number of redundant containers started
  replicas: 1
  selector:
    matchLabels:
      app: console-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: console-api
    spec:
      containers:
      - name: console-api
        image: double-troublelift/console-api:prod-latest
        # Setting this to Always will cause the container image to be pulled each time even if the tag is the same
        imagePullPolicy: Always
        # Specify the ports the application is listening on
        ports:
        - containerPort: 80
          name: external
        # Environment variables
        env:
        - name: APPNEXUS_AD_PROFILE_ID
          value: 'xxxxx'
        - name: ENABLE_DB_PROFILER
          value: 'false'
#    ------------- APP CONFIG -------------


#    ------ GLOBAL DATABASE CONFIG -------
        - name: MYSQL_RW_HOST
          valueFrom:
            configMapKeyRef:
              name: databases
              key: MYSQL_RW_HOST
        - name: REDSHIFT_RW_PORT
          valueFrom:
            configMapKeyRef:
              name: databases
              key: REDSHIFT_BIDDER_PORT

        - name: REDSHIFT_RW_HOST
          valueFrom:
            configMapKeyRef:
              name: databases
              key: REDSHIFT_BIDDER_HOST

        - name: MYSQL_RW_PORT
          valueFrom:
            configMapKeyRef:
              name: databases
              key: MYSQL_RW_PORT

#    ----------- SECRETS -----------------
        - name: APPNEXUS_API_USER
          valueFrom:
            secretKeyRef:
              name: console-api
              key: APPNEXUS_API_USER

        - name: MONGO_RW_URI
          valueFrom:
            secretKeyRef:
              name: console-api
              key: MONGO_RW_URI


        - name: LOG_LEVEL
          value: WARN
      # Specify the secret to use when pulling images from the container registry
      imagePullSecrets:
      - name: docker-hub

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: console-api
  namespace: prod
  labels:
    app: console-api
  annotations:
    ingress.kubernetes.io/enable-cors: 'true'
    zalando.org/skipper-ingress-redirect: 'false'
spec:
  rules:
  # The public host to create on the DNS server
  - host: console-api1.prod.double-troublelift.net
    http:
      paths:
      # The name of the service and the port from the service
      - backend:
          serviceName: console-api
          servicePort: 80
  - host: console-api2.prod.double-troublelift.net
    http:
      paths:
      # The name of the service and the port from the service
      - backend:
          serviceName: console-api
          servicePort: 80
  - host: console-api3.prod.double-troublelift.net
    http:
      paths:
      # The name of the service and the port from the service
      - backend:
          serviceName: console-api
          servicePort: 80
  - host: api.double-troublelift.com
    http:
      paths:
      # The name of the service and the port from the service
      - backend:
          serviceName: console-api
          servicePort: 80
